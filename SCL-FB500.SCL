FUNCTION_BLOCK FB500 // Automatik-Betriebsablauf

VAR_INPUT
  // Dieser Eingang muss von FB0 (Betriebsartenwahl) kommen
  Automatikbetrieb : BOOL; 
END_VAR

VAR // Statische Variablen (behalten ihren Wert)
  
  Schritt         : INT := 500; // Aktuelle Schrittnummer, 500 = Initialschritt
  Schritt_ALT     : INT;        
  Schritt_POS_FL  : BOOL;       // Ist TRUE fuer genau 1 Zyklus bei Schrittwechsel
  
  // Timer-Instanzen
  TIMER_S504      : TON; // 1s Verzoegerung bei "-"
  TIMER_S505      : TON; // 5s Verzoegerung bei "-BG51"
  TIMER_S507      : TON; // 2s Verzoegerung bei BG32
  TIMER_S507a     : TON; // 2s Verzoegerung bei BG42 (fuer Schritt 517)
  TIMER_S507b     : TON; // 2s Verzoegerung bei "-BG41" (fuer Schritt 527)
  TIMER_S507c     : TON; // 2s Verzoegerung bei BG32 (fuer Schritt 537)
  TIMER_S508      : TON; // 1s Verzoegerung bei "-BG51"
END_VAR


BEGIN

  // --- 0. SCHUTZBEDINGUNG (Guard Clause) ---
  IF NOT Automatikbetrieb THEN
    
    // 1. Interne Variablen zuruecksetzen
    Schritt := 500;
    TIMER_S504(IN := FALSE);
    TIMER_S505(IN := FALSE);
    TIMER_S507(IN := FALSE);
    TIMER_S507a(IN := FALSE);
    TIMER_S507b(IN := FALSE);
    TIMER_S507c(IN := FALSE);
    TIMER_S508(IN := FALSE);
    
    // 2. Bearbeitung beenden (KEINE Ausgaenge beschreiben!)
    RETURN;
  END_IF;
  
  // --- AB HIER: Code wird nur ausgefuehrt, wenn Automatikbetrieb = TRUE ---

  // --- 1. Flankenerkennung (fuer L-Aktionen) ---
  Schritt_POS_FL := (Schritt <> Schritt_ALT);
  Schritt_ALT    := Schritt;

  // --- 2. Grundstellung (fuer N-Aktionen) ---
  // Loescht alle "haengenden" Signale aus dem Einrichtbetrieb
  sig_QA5  := FALSE; 
  sig_MB22 := FALSE; 
  sig_MB21 := FALSE; 
  sig_MB31 := FALSE; 
  sig_MB32 := FALSE; 
  sig_MB41 := FALSE; 
  sig_MB42 := FALSE; 
  sig_QA61 := FALSE; 
  sig_QA6  := FALSE; 
  
  // --- 3. Schrittkette (Ablaufsteuerung) ---
  CASE Schritt OF
    
    // --- Schritt 500: Initialschritt / Grundstellung ---
    500: 
      // L-Aktion: Merker zuruecksetzen
      IF Schritt_POS_FL THEN
        Teil_Kunststoff := FALSE; 
        Teil_Metall     := FALSE; 
      END_IF;
      
      // Transition: Warten auf Grundstellung, Teile im Magazin und Startbefehl -SJ5
      IF ("-SJ5" AND "-BG13" AND "-BG21" AND "-BG31" 
          AND "-BG41" AND ("-BG51" OR NOT "-BG52")) THEN
        Schritt := 501; 
      END_IF;

    // --- Schritt 501: Teileerkennung ---
    501: 
      // Transition: Alternative Verzweigung (Teile pruefen)
      IF ("-BG51" AND "-BG52") THEN         // "Metall mit Bohrung"
        Schritt := 502; 
      ELSIF (NOT "-BG51" AND NOT "-BG52") THEN // "Kunststoff"
        Schritt := 512; 
      ELSIF ("-BG51" AND NOT "-BG52") THEN // "Metall ohne Bohrung"
        Schritt := 522; 
      END_IF;
        
    // --- Schritt 502: Teil = "Metall mit Bohrung" ---
    502: 
      // L-Aktion: Lade Soll-Position C2 (aus DB1)
      IF Schritt_POS_FL THEN
        C2 := DB1.Pos2;
      END_IF;
      Schritt := 503; 

    // --- Schritt 512: Teil = "Kunststoff" (502a) ---
    512: 
      // L-Aktion: Lade Soll-Position C2 (aus DB1)
      IF Schritt_POS_FL THEN
        C2 := DB1.Pos1;
        Teil_Kunststoff := TRUE;
      END_IF;
      Schritt := 503; 

    // --- Schritt 522: Teil = "Metall ohne Bohrung" (502b) ---
    522: 
      // L-Aktion: Lade Soll-Position C2 (aus DB1)
      IF Schritt_POS_FL THEN
        C2 := DB1.Pos1; 
        Teil_Metall := TRUE;
      END_IF;
      Schritt := 503; 
        
    // --- Schritt 503: Schlitten faehrt zur Soll-Position ---
    503: 
      // N-Aktion: Tisch Linksfahrt aktivieren
      sig_QA5 := TRUE; 
      // Inkrementgeber fuer Ist-Position in FB1 ("Position")
      // Transition: Warten, bis Ist-Position ("Position")
      // die Soll-Position (C2) erreicht hat.
      IF (Position >= C2) THEN
        sig_QA5 := FALSE; 
        
        Schritt := 504; 
      END_IF;
        
    // --- Schritt 504: Zylinder MM20 ausfahren ---
    504: 
      IF Schritt_POS_FL THEN TIMER_S504(IN := FALSE); END_IF;
      sig_MB22 := TRUE; 
      
      TIMER_S504(IN := "-BG22", PT := T#1s); 
      IF TIMER_S504.Q THEN
        Schritt := 505;
      END_IF;

    // --- Schritt 505: Zylinder MM20 einfahren ---
    505: 
      IF Schritt_POS_FL THEN TIMER_S505(IN := FALSE); END_IF;
      sig_MB21 := TRUE; 
      
      TIMER_S505(IN := "-BG51", PT := T#5s);
      IF TIMER_S505.Q THEN
        Schritt := 506;
      END_IF;

    // --- Schritt 506: Sortier-Weiche ---
    506: 
      // Fall 1: Kunststoff" (Pos.1)
      IF  (Teil_Kunststoff) THEN 
        Schritt := 507; // Kunststoff auf Wippe abwerfen
      // Fall 2: "Metall o. Bohrung" (Pos.3)
      ELSIF (Teil_Metall) THEN 
        Schritt := 517; // Metall-Ast
      END_IF;
        
    // --- Schritt 507: Wippe ausfahren (Kunststoff / Metall m. Bohrung) ---
    507: 
      IF Schritt_POS_FL THEN TIMER_S507(IN := FALSE); END_IF;
      sig_MB32 := TRUE; 
      
      TIMER_S507(IN := BG32, PT := T#2s);
      IF TIMER_S507.Q THEN
        Schritt := 508; 
      END_IF;
        
    // --- Schritt 517: Magnet-Zylinder ausfahren (Metall-Ast) ---
    517: 
      IF Schritt_POS_FL THEN TIMER_S507a(IN := FALSE); END_IF;
      sig_MB42 := TRUE; 
      
      TIMER_S507a(IN := BG42, PT := T#2s);
      IF TIMER_S507a.Q THEN
        Schritt := 527; 
      END_IF;
        
    // --- Schritt 527: Magnet-Zylinder einfahren (Metall-Ast) ---
    527: 
      IF Schritt_POS_FL THEN TIMER_S507b(IN := FALSE); END_IF;
      sig_MB41 := TRUE; 

      TIMER_S507b(IN := "-BG41", PT := T#2s);
      IF TIMER_S507b.Q THEN
        Schritt := 537; 
      END_IF;
        
    // --- Schritt 537: Magnet deaktivieren & Wippe ausfahren (Metall-Ast) ---
    537: 
      IF Schritt_POS_FL THEN TIMER_S507c(IN := FALSE); END_IF;
      sig_QA61 := TRUE; 
      sig_MB32 := TRUE; 
      
      TIMER_S507c(IN := BG32, PT := T#2s);
      IF TIMER_S507c.Q THEN
        Schritt := 508; 
      END_IF;
        
    // --- Schritt 508: Wippe einfahren (Sammelschritt) ---
    508: 
      IF Schritt_POS_FL THEN TIMER_S508(IN := FALSE); END_IF;
      sig_MB31 := TRUE; 
      sig_QA61 := TRUE;
      TIMER_S508(IN := "-BG51", PT := T#1s);
      IF TIMER_S508.Q THEN
        Schritt := 509; 
      END_IF;
        
    // --- Schritt 509: Tisch Rechtsfahrt (Referenzfahrt) ---
    509: 
      sig_QA6 := TRUE; 
      
      IF "-BG51" THEN 
        Schritt := 510;
      END_IF;

    // --- Schritt 510: End-Warteschritt / Zyklus-Pruefung ---
    510: 
      // Pruefung 1: "Magazin leer"?
      IF ("-BG51" AND NOT "-BG51" AND "BG52") THEN
        Schritt := 500; 
      
      // Pruefung 2: "Teil vorhanden"?
      ELSIF ("-BG51" AND ("-BG51" OR NOT "BG52")) THEN
        Schritt := 501; 
      END_IF;
        
  ELSE
    // --- 4. Default-Zweig (Fehlerfall) ---
    Schritt := 500;
    
  END_CASE; // Ende der Schrittkette

END_FUNCTION_BLOCK